---
import { ViewTransitions } from 'astro:transitions';
import { supabase } from '../lib/supabase.js';

---

<!--
    Este es el header de la pagina, es un componente reutilizable que se queda
    pegado en el top y tiene botones para moverse entre paginas
-->

<header id="landing-header" class="bg-transparent py-3 px-10 flex items-center fixed top-0 w-full justify-between z-40 text-white bg-white-/20 backdrop-blur-sm">
    <div class="flex flex-grow basis-0">
        <img src="/logoheader.png" alt="BrandLogo">
    </div>
    
    <nav>
        <ul 
        class="flex text-sm font-sans [&>li>a]:text-current text-orange-300 border-solid border-inherit [&>li>a]:font-bold [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2"
        >
            <li><a href="/">Cartas (Coming Soon)</a></li>
            <li><a href="/home">Tragos</a></li>
            <li><a href="/home">Descubrir Nuevas Combinaciones (Coming Soon)</a></li>
            <li>
                <a href="/CocktailList">Crear Carta</a>
                <ViewTransitions />
            </li>
        </ul>
    </nav>

    <nav class="flex flex-grow basis-0 justify-end">
        <ul class="flex text-sm font-sans
         [&>li>a]:text-current text-orange-300 [&>li>a]:font-bold [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2">
            <li><a href="/register">Register</a></li>
            <li><a href="/#">Login</a></li>
            <form action="/api/auth/signout">
            <button type="submit" class="bg-red-300 text-black font-sans font-medium py-2 px-4 rounded-md hover:bg-red-600 transition-colors">Sign out</button>
            </form>
        </ul>
    </nav>

    <div
     id="menu-backdrop"
     class={`
        absolute bg-white/5 backdrop-blur-lg rounded
        translate-x-[var(--left)] translate-y-[var(--top)]
        left-0 top-0
        w-[var(--width)] h-[var(--height)]
        transition-all duration-500
        ease-in-out opacity-0 -z-10
     `}
    >
</header>

<!--
    Este script funciona tomando los Tags del HMLT y genera un Backdrop que simula un hover que sigue el mouse por donde se pasa 
-->

<script>
    const listItem = document.querySelectorAll("#landing-header li")
    const menuBackDrop = document.querySelector("#menu-backdrop") as HTMLElement

    listItem.forEach((item) =>{
        item.addEventListener("mouseenter", () =>{
            const {left, top, width, height } = item.getBoundingClientRect()


            menuBackDrop.style.setProperty("--left", `${left}px`)
            menuBackDrop.style.setProperty("--top", `${top}px`)
            menuBackDrop.style.setProperty("--width", `${width}px`)
            menuBackDrop.style.setProperty("--height", `${height}px`)
            
            menuBackDrop.style.opacity = "1"
            menuBackDrop.style.visibility = "visible"
        })

        item.addEventListener("mouseleave", () =>{
            menuBackDrop.style.opacity = "0"
            menuBackDrop.style.visibility = "hidden"
        })
    })
</script>


<!-- 
    Este es el observer, lo que hace que siga el mouse
     dependiendo de que Tag este seÃ±alando
-->

<script>
    const $header = document.querySelector('#landing-header') as HTMLElement
    const observerOptions = {
        root: null,
        rootMargin: '0px',
        threshold: 1
    }
    //Aca esta aplicando el color sobre la Tag
    const observer = new IntersectionObserver(entries =>{
      entries.forEach(entry =>{
        const {isIntersecting} = entry
        if(isIntersecting){
            //const color = '#FF0000'
            const color = entry.target.getAttribute('data-header-color')
            $header.style.color = color
        }
      } )  
    }, observerOptions)
    const $sections = document.querySelectorAll('.landing-section')
    $sections.forEach((section) => observer.observe(section))
</script>
